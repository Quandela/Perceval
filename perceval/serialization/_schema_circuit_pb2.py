# -*- coding: utf-8 -*-
# MIT License
#
# Copyright (c) 2022 Quandela
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# As a special exception, the copyright holders of exqalibur library give you
# permission to combine exqalibur with code included in the standard release of
# Perceval under the MIT license (or modified versions of such code). You may
# copy and distribute such a combined system following the terms of the MIT
# license for both exqalibur and Perceval. This exception for the usage of
# exqalibur is limited to the python bindings used by Perceval.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# flake8: noqa

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: perceval_circuit.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1asrc/perceval_circuit.proto\x12\x0fperceval.schema\"<\n\rComplexDouble\x12\x12\n\nreal_value\x18\x01 \x01(\x01\x12\x17\n\x0fimaginary_value\x18\x02 \x01(\x01\"\x94\x01\n\tParameter\x12\x14\n\nreal_value\x18\x01 \x01(\x01H\x00\x12\x10\n\x06symbol\x18\x02 \x01(\tH\x00\x12\x14\n\nexpression\x18\x03 \x01(\tH\x00\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x33\n\x0f\x65xpr_parameters\x18\x05 \x03(\x0b\x32\x1a.perceval.schema.ParameterB\x06\n\x04type\"<\n\x0cMatrixDouble\x12,\n\x04\x64\x61ta\x18\x01 \x03(\x0b\x32\x1e.perceval.schema.ComplexDouble\":\n\x0eMatrixSymbolic\x12(\n\x04\x64\x61ta\x18\x01 \x03(\x0b\x32\x1a.perceval.schema.Parameter\"\x93\x01\n\x06Matrix\x12\x0c\n\x04rows\x18\x01 \x01(\x05\x12\x0c\n\x04\x63ols\x18\x02 \x01(\x05\x12\x30\n\x07numeric\x18\x03 \x01(\x0b\x32\x1d.perceval.schema.MatrixDoubleH\x00\x12\x33\n\x08symbolic\x18\x04 \x01(\x0b\x32\x1f.perceval.schema.MatrixSymbolicH\x00\x42\x06\n\x04\x64\x61ta\"\xa7\x07\n\tComponent\x12\x15\n\rstarting_mode\x18\x01 \x01(\x05\x12\x0e\n\x06n_mode\x18\x02 \x01(\x05\x12\x10\n\x08offset_x\x18\x03 \x01(\x01\x12\x12\n\nannotation\x18\x04 \x01(\t\x12+\n\x07\x63ircuit\x18\n \x01(\x0b\x32\x18.perceval.schema.CircuitH\x00\x12\x36\n\rphase_shifter\x18\x0b \x01(\x0b\x32\x1d.perceval.schema.PhaseShifterH\x00\x12\x36\n\rbeam_splitter\x18\x0c \x01(\x0b\x32\x1d.perceval.schema.BeamSplitterH\x00\x12\x33\n\x0bpermutation\x18\x0e \x01(\x0b\x32\x1c.perceval.schema.PermutationH\x00\x12+\n\x07unitary\x18\x0f \x01(\x0b\x32\x18.perceval.schema.UnitaryH\x00\x12\x30\n\nwave_plate\x18\x10 \x01(\x0b\x32\x1a.perceval.schema.WavePlateH\x00\x12\x35\n\x0fhalf_wave_plate\x18\x11 \x01(\x0b\x32\x1a.perceval.schema.WavePlateH\x00\x12\x38\n\x12quarter_wave_plate\x18\x12 \x01(\x0b\x32\x1a.perceval.schema.WavePlateH\x00\x12\x44\n\x14polarization_rotator\x18\x13 \x01(\x0b\x32$.perceval.schema.PolarizationRotatorH\x00\x12\x30\n\ntime_delay\x18\x14 \x01(\x0b\x32\x1a.perceval.schema.TimeDelayH\x00\x12I\n\x17polarized_beam_splitter\x18\x15 \x01(\x0b\x32&.perceval.schema.PolarizedBeamSplitterH\x00\x12+\n\x07\x62\x61rrier\x18\x16 \x01(\x0b\x32\x18.perceval.schema.BarrierH\x00\x12\x34\n\x0closs_channel\x18\x17 \x01(\x0b\x32\x1c.perceval.schema.LossChannelH\x00\x12\x41\n\x13\x66\x66_circuit_provider\x18\x18 \x01(\x0b\x32\".perceval.schema.FFCircuitProviderH\x00\x12:\n\x0f\x66\x66_configurator\x18\x19 \x01(\x0b\x32\x1f.perceval.schema.FFConfiguratorH\x00\x42\x06\n\x04type\"f\n\x0cPhaseShifter\x12\'\n\x03phi\x18\x01 \x01(\x0b\x32\x1a.perceval.schema.Parameter\x12-\n\tmax_error\x18\x02 \x01(\x0b\x32\x1a.perceval.schema.Parameter\"\xcc\x02\n\x0c\x42\x65\x61mSplitter\x12<\n\nconvention\x18\x01 \x01(\x0e\x32(.perceval.schema.BeamSplitter.Convention\x12)\n\x05theta\x18\x02 \x01(\x0b\x32\x1a.perceval.schema.Parameter\x12*\n\x06phi_tl\x18\x03 \x01(\x0b\x32\x1a.perceval.schema.Parameter\x12*\n\x06phi_bl\x18\x04 \x01(\x0b\x32\x1a.perceval.schema.Parameter\x12*\n\x06phi_tr\x18\x05 \x01(\x0b\x32\x1a.perceval.schema.Parameter\x12*\n\x06phi_br\x18\x06 \x01(\x0b\x32\x1a.perceval.schema.Parameter\"#\n\nConvention\x12\x06\n\x02Rx\x10\x00\x12\x06\n\x02Ry\x10\x01\x12\x05\n\x01H\x10\x02\"\x17\n\x15PolarizedBeamSplitter\"W\n\x07Unitary\x12$\n\x03mat\x18\x01 \x01(\x0b\x32\x17.perceval.schema.Matrix\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x18\n\x10use_polarization\x18\x03 \x01(\x08\"#\n\x0bPermutation\x12\x14\n\x0cpermutations\x18\x01 \x03(\x05\"_\n\tWavePlate\x12)\n\x05\x64\x65lta\x18\x01 \x01(\x0b\x32\x1a.perceval.schema.Parameter\x12\'\n\x03xsi\x18\x02 \x01(\x0b\x32\x1a.perceval.schema.Parameter\"@\n\x13PolarizationRotator\x12)\n\x05\x64\x65lta\x18\x01 \x01(\x0b\x32\x1a.perceval.schema.Parameter\"3\n\tTimeDelay\x12&\n\x02\x64t\x18\x01 \x01(\x0b\x32\x1a.perceval.schema.Parameter\"7\n\x0bLossChannel\x12(\n\x04loss\x18\x01 \x01(\x0b\x32\x1a.perceval.schema.Parameter\"\x1a\n\x07\x42\x61rrier\x12\x0f\n\x07visible\x18\x01 \x01(\x08\"k\n\x07\x43ircuit\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06n_mode\x18\x02 \x01(\x05\x12\x12\n\nannotation\x18\x03 \x01(\t\x12.\n\ncomponents\x18\x04 \x03(\x0b\x32\x1a.perceval.schema.Component\"F\n\rBSLayeredPPNR\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tbs_layers\x18\x02 \x01(\x05\x12\x14\n\x0creflectivity\x18\x03 \x01(\x01\"Z\n\x08\x44\x65tector\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07n_wires\x18\x02 \x01(\x05\x12\x16\n\x0emax_detections\x18\x03 \x01(\x05\x12\x17\n\x0fwire_efficiency\x18\x04 \x01(\x02\"r\n\tIDetector\x12.\n\x04ppnr\x18\x01 \x01(\x0b\x32\x1e.perceval.schema.BSLayeredPPNRH\x00\x12-\n\x08\x64\x65tector\x18\x02 \x01(\x0b\x32\x19.perceval.schema.DetectorH\x00\x42\x06\n\x04type\"&\n\x04Port\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08\x65ncoding\x18\x02 \x01(\x05\"A\n\x06Herald\x12\x1a\n\x12\x61utogenerated_name\x18\x01 \x01(\x08\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\x05\"a\n\x05\x41Port\x12%\n\x04port\x18\x01 \x01(\x0b\x32\x15.perceval.schema.PortH\x00\x12)\n\x06herald\x18\x02 \x01(\x0b\x32\x17.perceval.schema.HeraldH\x00\x42\x06\n\x04type\"\xdf\x04\n\nExperiment\x12\x13\n\x0binput_state\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x13\n\x0bnoise_model\x18\x03 \x01(\t\x12\x13\n\x0bpost_select\x18\x04 \x01(\t\x12@\n\x0binput_ports\x18\x05 \x03(\x0b\x32+.perceval.schema.Experiment.InputPortsEntry\x12\x42\n\x0coutput_ports\x18\x06 \x03(\x0b\x32,.perceval.schema.Experiment.OutputPortsEntry\x12=\n\tdetectors\x18\x07 \x03(\x0b\x32*.perceval.schema.Experiment.DetectorsEntry\x12\x0e\n\x06n_mode\x18\x08 \x01(\x05\x12.\n\ncomponents\x18\t \x03(\x0b\x32\x1a.perceval.schema.Component\x12\x1a\n\x12min_photons_filter\x18\n \x01(\x05\x1aI\n\x0fInputPortsEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12%\n\x05value\x18\x02 \x01(\x0b\x32\x16.perceval.schema.APort:\x02\x38\x01\x1aJ\n\x10OutputPortsEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12%\n\x05value\x18\x02 \x01(\x0b\x32\x16.perceval.schema.APort:\x02\x38\x01\x1aL\n\x0e\x44\x65tectorsEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12)\n\x05value\x18\x02 \x01(\x0b\x32\x1a.perceval.schema.IDetector:\x02\x38\x01\"}\n\x13\x43ircuitOrExperiment\x12+\n\x07\x63ircuit\x18\x01 \x01(\x0b\x32\x18.perceval.schema.CircuitH\x00\x12\x31\n\nexperiment\x18\x02 \x01(\x0b\x32\x1b.perceval.schema.ExperimentH\x00\x42\x06\n\x04type\"\xe2\x02\n\x11\x46\x46\x43ircuitProvider\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06offset\x18\x02 \x01(\x05\x12\x1a\n\x12\x62lock_circuit_size\x18\x03 \x01(\x08\x12+\n\x07\x63ircuit\x18\n \x01(\x0b\x32\x18.perceval.schema.CircuitH\x00\x12\x31\n\nexperiment\x18\x0b \x01(\x0b\x32\x1b.perceval.schema.ExperimentH\x00\x12G\n\x0b\x63onfig_circ\x18\x14 \x03(\x0b\x32\x32.perceval.schema.FFCircuitProvider.ConfigCircEntry\x1aW\n\x0f\x43onfigCircEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x33\n\x05value\x18\x02 \x01(\x0b\x32$.perceval.schema.CircuitOrExperiment:\x02\x38\x01\x42\x11\n\x0f\x64\x65\x66\x61ult_circuit\"\x7f\n\x0eVariableValues\x12=\n\x07mapping\x18\x01 \x03(\x0b\x32,.perceval.schema.VariableValues.MappingEntry\x1a.\n\x0cMappingEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\"\xc9\x02\n\x0e\x46\x46\x43onfigurator\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06offset\x18\x02 \x01(\x05\x12\x1a\n\x12\x62lock_circuit_size\x18\x03 \x01(\x08\x12\x34\n\x12\x63ontrolled_circuit\x18\x04 \x01(\x0b\x32\x18.perceval.schema.Circuit\x12\x37\n\x0e\x64\x65\x66\x61ult_config\x18\x05 \x01(\x0b\x32\x1f.perceval.schema.VariableValues\x12=\n\x07\x63onfigs\x18\x06 \x03(\x0b\x32,.perceval.schema.FFConfigurator.ConfigsEntry\x1aO\n\x0c\x43onfigsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12.\n\x05value\x18\x02 \x01(\x0b\x32\x1f.perceval.schema.VariableValues:\x02\x38\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'perceval_circuit_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _EXPERIMENT_INPUTPORTSENTRY._options = None
  _EXPERIMENT_INPUTPORTSENTRY._serialized_options = b'8\001'
  _EXPERIMENT_OUTPUTPORTSENTRY._options = None
  _EXPERIMENT_OUTPUTPORTSENTRY._serialized_options = b'8\001'
  _EXPERIMENT_DETECTORSENTRY._options = None
  _EXPERIMENT_DETECTORSENTRY._serialized_options = b'8\001'
  _FFCIRCUITPROVIDER_CONFIGCIRCENTRY._options = None
  _FFCIRCUITPROVIDER_CONFIGCIRCENTRY._serialized_options = b'8\001'
  _VARIABLEVALUES_MAPPINGENTRY._options = None
  _VARIABLEVALUES_MAPPINGENTRY._serialized_options = b'8\001'
  _FFCONFIGURATOR_CONFIGSENTRY._options = None
  _FFCONFIGURATOR_CONFIGSENTRY._serialized_options = b'8\001'
  _COMPLEXDOUBLE._serialized_start=47
  _COMPLEXDOUBLE._serialized_end=107
  _PARAMETER._serialized_start=110
  _PARAMETER._serialized_end=258
  _MATRIXDOUBLE._serialized_start=260
  _MATRIXDOUBLE._serialized_end=320
  _MATRIXSYMBOLIC._serialized_start=322
  _MATRIXSYMBOLIC._serialized_end=380
  _MATRIX._serialized_start=383
  _MATRIX._serialized_end=530
  _COMPONENT._serialized_start=533
  _COMPONENT._serialized_end=1468
  _PHASESHIFTER._serialized_start=1470
  _PHASESHIFTER._serialized_end=1572
  _BEAMSPLITTER._serialized_start=1575
  _BEAMSPLITTER._serialized_end=1907
  _BEAMSPLITTER_CONVENTION._serialized_start=1872
  _BEAMSPLITTER_CONVENTION._serialized_end=1907
  _POLARIZEDBEAMSPLITTER._serialized_start=1909
  _POLARIZEDBEAMSPLITTER._serialized_end=1932
  _UNITARY._serialized_start=1934
  _UNITARY._serialized_end=2021
  _PERMUTATION._serialized_start=2023
  _PERMUTATION._serialized_end=2058
  _WAVEPLATE._serialized_start=2060
  _WAVEPLATE._serialized_end=2155
  _POLARIZATIONROTATOR._serialized_start=2157
  _POLARIZATIONROTATOR._serialized_end=2221
  _TIMEDELAY._serialized_start=2223
  _TIMEDELAY._serialized_end=2274
  _LOSSCHANNEL._serialized_start=2276
  _LOSSCHANNEL._serialized_end=2331
  _BARRIER._serialized_start=2333
  _BARRIER._serialized_end=2359
  _CIRCUIT._serialized_start=2361
  _CIRCUIT._serialized_end=2468
  _BSLAYEREDPPNR._serialized_start=2470
  _BSLAYEREDPPNR._serialized_end=2540
  _DETECTOR._serialized_start=2542
  _DETECTOR._serialized_end=2632
  _IDETECTOR._serialized_start=2634
  _IDETECTOR._serialized_end=2748
  _PORT._serialized_start=2750
  _PORT._serialized_end=2788
  _HERALD._serialized_start=2790
  _HERALD._serialized_end=2855
  _APORT._serialized_start=2857
  _APORT._serialized_end=2954
  _EXPERIMENT._serialized_start=2957
  _EXPERIMENT._serialized_end=3564
  _EXPERIMENT_INPUTPORTSENTRY._serialized_start=3337
  _EXPERIMENT_INPUTPORTSENTRY._serialized_end=3410
  _EXPERIMENT_OUTPUTPORTSENTRY._serialized_start=3412
  _EXPERIMENT_OUTPUTPORTSENTRY._serialized_end=3486
  _EXPERIMENT_DETECTORSENTRY._serialized_start=3488
  _EXPERIMENT_DETECTORSENTRY._serialized_end=3564
  _CIRCUITOREXPERIMENT._serialized_start=3566
  _CIRCUITOREXPERIMENT._serialized_end=3691
  _FFCIRCUITPROVIDER._serialized_start=3694
  _FFCIRCUITPROVIDER._serialized_end=4048
  _FFCIRCUITPROVIDER_CONFIGCIRCENTRY._serialized_start=3942
  _FFCIRCUITPROVIDER_CONFIGCIRCENTRY._serialized_end=4029
  _VARIABLEVALUES._serialized_start=4050
  _VARIABLEVALUES._serialized_end=4177
  _VARIABLEVALUES_MAPPINGENTRY._serialized_start=4131
  _VARIABLEVALUES_MAPPINGENTRY._serialized_end=4177
  _FFCONFIGURATOR._serialized_start=4180
  _FFCONFIGURATOR._serialized_end=4509
  _FFCONFIGURATOR_CONFIGSENTRY._serialized_start=4430
  _FFCONFIGURATOR_CONFIGSENTRY._serialized_end=4509
# @@protoc_insertion_point(module_scope)
