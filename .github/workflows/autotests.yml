# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Auto Tests

on:
  push:
    branches:
    - main
    - release/*
  pull_request:
    branches:
    - main
    - release/*

  workflow_dispatch:
    inputs:
      python_v:
        description: 'python version'
        required: true
        default: '3.10'
        type: choice
        options:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'

env:
  PYTHON_V: ${{ github.event.inputs.python_v || '3.9' }}

jobs:
  perceval-autotests:
    name: Run PyTest on ${{ matrix.os }}
    if: always()
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
    - if: runner.os == 'Linux'
      name: Initialize PYTHON_V_CP linux
      run: |
        echo "PYTHON_V_CP=cp$( echo '${{env.PYTHON_V}}' | sed 's/\.\([0-9]\)/\1/' )" >> $GITHUB_ENV
    - if: runner.os != 'Linux'
      name: Initialize PYTHON_V_CP notLinux
      run: |
        echo "PYTHON_V_CP=cp$( echo '${{env.PYTHON_V}}' | sed 's/\.\([0-9]\)/\1/' )" >> $GITHUB_ENV
      shell: Bash

    - uses: actions/checkout@v3
    - name: Set up Python ${{ env.PYTHON_V }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ env.PYTHON_V }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r tests/requirements.txt
        python -m pip install -r requirements.txt
        python -m pip install .

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

  perceval-docs-test:
    name: Build docs on ubuntu
    needs:
    - perceval-autotests
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - if: runner.os == 'Linux'
      name: Initialize PYTHON_V_CP linux
      run: |
        echo "PYTHON_V_CP=cp$( echo '${{env.PYTHON_V}}' | sed 's/\.\([0-9]\)/\1/' )" >> $GITHUB_ENV
    - if: runner.os != 'Linux'
      name: Initialize PYTHON_V_CP notLinux
      run: |
        echo "PYTHON_V_CP=cp$( echo '${{env.PYTHON_V}}' | sed 's/\.\([0-9]\)/\1/' )" >> $GITHUB_ENV
      shell: Bash

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version:  ${{ env.PYTHON_V }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r docs/requirements.txt
        python -m pip install .
    - name: Install Pandoc
      run: |
        sudo apt update
        sudo apt install pandoc

    - name: Build docs
      run: |
        cd docs
        make html

    - name: 'Create docs Artefact'
      uses: actions/upload-artifact@v3
      with:
        name: docs
        path: docs/build/html
        retention-days: 1
