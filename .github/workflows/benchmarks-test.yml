#this is a manual workflow that compare benchmarks with the same runner and the same version of python
# runs benchmarks at benchmarks/benchmark_*.py
# compare the result on the gh-page branch
# save the log on (.benchmark/<runner>_CPython-<PyVersion>/<branch>_<tag_version>_<nb_runner>_<commit>.json)
# and display web page at (benchmarks/<runner>_CPython-<PyVersion>/)

name: Benchmarks

on:
  workflow_dispatch:
    inputs:
      os:
        description: 'Choose OS'
        required: true
        default: 'MiniMac_arm64'
        type: choice
        options:
          - MiniMac_arm64
          - ubuntu-latest
      commit_ref:
        description: Use specific perceval's ref (branch, tag or SHA)
        default: ''
        type: string
        required: false
      save:
        description: 'Save log'
        default: false
        required: false
        type: boolean


env:
  python_v: '3.9'

jobs:
  benchmark:
    name: Run pytest-benchmark benchmark example
    if: ${{ always() }}
    runs-on: ${{ github.event.inputs.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.commit_ref }}
          fetch-depth: 0

      # install python, already DL on MiniMac_arm64
      - if:  ${{ github.event.inputs.os != 'MiniMac_arm64' }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_v }}

      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            python -m pip install -r requirements.txt pytest pytest-benchmark
            python -m pip install .

      # save var env use bash shell for notLinux
      - if: runner.os == 'Linux'
        name: Initialize config linux
        run: |
          echo "tag_version=$( git describe --tags )" >> $GITHUB_ENV
          echo "folder_env=${{ github.event.inputs.os }}-CPython-${{ env.python_v }}" >> $GITHUB_ENV
          echo "file_json=$( git describe --tags )_${{ github.ref_name }}_${{ github.run_attempt }}_${{ github.sha }}.json" >> $GITHUB_ENV
          echo "folder_file_json=.benchmarks/${{ github.event.inputs.os }}-CPython-${{ env.python_v }}/${{ github.ref_name }}_$( git describe --tags )_${{ github.run_number }}_${{ github.sha }}.json" >> $GITHUB_ENV
      - if: runner.os != 'Linux'
        name: Initialize config notLinux
        run: |
          echo "tag_version=$( git describe --tags )" >> $GITHUB_ENV
          echo "folder_env=${{ github.event.inputs.os }}-CPython-${{ env.python_v }}" >> $GITHUB_ENV
          echo "file_json=$( git describe --tags )_${{ github.ref_name }}_${{ github.run_attempt }}_${{ github.sha }}.json" >> $GITHUB_ENV
          echo "folder_file_json=.benchmarks/${{ github.event.inputs.os }}-CPython-${{ env.python_v }}/${{ github.ref_name }}_$( git describe --tags )_${{ github.run_number }}_${{ github.sha }}.json" >> $GITHUB_ENV
        shell: Bash

      - name: Run benchmark
        run: |
          python -m pytest benchmark/benchmark_*.py --benchmark-json ${{ env.file_json }} --benchmark-storage file://./.benchmarks/${{ env.folder_env }} >> pytest_result_${{ env.folder_env }}_${{ env.tag_version }}
          mv ${{ env.file_json }} ${{ env.folder_file_json }}

      # upload the result on action GitHub
      - name: upload the result Log
        uses: actions/upload-artifact@v3
        with:
          name: pytest_benchmarks_log_${{ env.folder_env }}_${{ github.run_number }}_${{ env.tag_version }}
          path: |
            pytest_result_${{ env.folder_env }}_${{ env.tag_version }}
            ${{ env.folder_file_json }}

      # use github-action-benchmark for graph
      - name: compare result with last version and save on gh-page branch
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Python Benchmark with pytest-benchmark
          tool: 'pytest'
          output-file-path: ${{ env.folder_file_json }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: ${{ inputs.save }}
          benchmark-data-dir-path: benchmarks/${{ env.folder_env }}
          alert-threshold: '120%'
          comment-on-alert: true

      - name: checkout gh-pages
        uses: actions/checkout@v2
        with:
          ref: gh-pages

      - name: Download the result Log on github action
        uses: actions/download-artifact@v3
        with:
          name: pytest_benchmarks_log_${{ env.folder_env }}_${{ github.run_number }}_${{ env.tag_version }}

      - name: compare benchmark
        run: |
          pytest-benchmark compare .benchmarks/${{ env.folder_env }}/* >> compare_result_${{ env.folder_env }}_${{ env.tag_version }}

      - name: upload the result compare
        uses: actions/upload-artifact@v3
        with:
          name: pytest_benchmarks_compare_${{ env.folder_env }}_${{ github.run_number }}_${{ env.tag_version }}
          path: |
            compare_result_${{ env.folder_env }}_${{ env.tag_version }}

      - name: Download the result compare
        uses: actions/download-artifact@v3
        with:
          name: pytest_benchmarks_compare_${{ env.folder_env }}_${{ github.run_number }}_${{ env.tag_version }}

      - name: Save benchmark report in gh-pages branch
        if: inputs.save
        run: |
          git pull
          git config --global user.name 'github-action-benchmark'
          git config --global user.email 'github@users.noreply.github.com'
          git add ${{ env.folder_file_json }}
          git commit -am "Automated benchmark report"
          git push
